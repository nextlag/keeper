{
    "swagger": "2.0",
    "info": {
        "description": "keeper project",
        "title": "Keeper Server",
        "contact": {
            "name": "Nexbug",
            "url": "https://github.com/nextlag",
            "email": "nextbug@ya.ru"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate a user and generate JWT tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in a user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.loginPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.JWT"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Clear JWT tokens and user session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out the user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh the JWT access token using the refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh JWT access token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.JWT"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user and generate initial JWT tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "Registration credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.loginPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Endpoint to check if the application is running correctly",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check the health of the application",
                "responses": {
                    "200": {
                        "description": "connected",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/binary": {
            "get": {
                "description": "Retrieve all binaries uploaded by the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "binaries"
                ],
                "summary": "Get all binaries for the current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Binary"
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload a new binary for the current user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "binaries"
                ],
                "summary": "Add a new binary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Binary name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Binary file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entity.Binary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/binary/{id}": {
            "get": {
                "description": "Download a specific binary identified by its UUID",
                "tags": [
                    "binaries"
                ],
                "summary": "Download a binary by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Binary UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific binary identified by its UUID",
                "tags": [
                    "binaries"
                ],
                "summary": "Delete a binary by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Binary UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "delete accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/binary/{id}/meta": {
            "post": {
                "description": "Add metadata to a specific binary identified by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "binaries"
                ],
                "summary": "Add metadata to a binary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Binary UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Metadata for the binary",
                        "name": "metadata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Meta"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Meta"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/cards": {
            "get": {
                "description": "Retrieve all cards for the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Get all cards for the current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Card"
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload a new card for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Add a new card",
                "parameters": [
                    {
                        "description": "Card data",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Card"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/entity.Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/cards/{id}": {
            "delete": {
                "description": "Delete a specific card identified by its UUID",
                "tags": [
                    "cards"
                ],
                "summary": "Delete a card by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Delete accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a specific card identified by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Update a card by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated card data",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Card"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Update accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "description": "Retrieve information about the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get current user information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/logins": {
            "get": {
                "description": "Retrieve all logins for the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logins"
                ],
                "summary": "Get all logins for the current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Login"
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload a new login for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logins"
                ],
                "summary": "Add a new login",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Login"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/entity.Login"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/logins/{id}": {
            "delete": {
                "description": "Delete a specific login identified by its UUID",
                "tags": [
                    "logins"
                ],
                "summary": "Delete a login by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Login UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Delete accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a specific login identified by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logins"
                ],
                "summary": "Update a login by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Login UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated login data",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Login"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Update accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/notes": {
            "get": {
                "description": "Retrieve all notes for the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Get all notes for the current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.SecretNote"
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload a new note for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Add a new note",
                "parameters": [
                    {
                        "description": "Note data",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SecretNote"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/entity.SecretNote"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/notes/{id}": {
            "delete": {
                "description": "Delete a specific note identified by its UUID",
                "tags": [
                    "notes"
                ],
                "summary": "Delete a note by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Delete accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a specific note identified by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Update a note by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated note data",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SecretNote"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Update accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Binary": {
            "type": "object",
            "properties": {
                "file_name": {
                    "description": "Filesystem name.",
                    "type": "string"
                },
                "meta": {
                    "description": "Associated metadata.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Meta"
                    }
                },
                "name": {
                    "description": "File name.",
                    "type": "string"
                }
            }
        },
        "entity.Card": {
            "type": "object",
            "properties": {
                "brand": {
                    "description": "Card brand.",
                    "type": "string"
                },
                "card_holder_name": {
                    "description": "Cardholder's name.",
                    "type": "string"
                },
                "expiration_month": {
                    "description": "Expiration month.",
                    "type": "string"
                },
                "expiration_year": {
                    "description": "Expiration year.",
                    "type": "string"
                },
                "meta": {
                    "description": "Associated metadata.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Meta"
                    }
                },
                "name": {
                    "description": "Card name.",
                    "type": "string"
                },
                "number": {
                    "description": "Card number.",
                    "type": "string"
                },
                "security_code": {
                    "description": "Security code (CVV).",
                    "type": "string"
                }
            }
        },
        "entity.JWT": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "Access token for authentication.",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "Refresh token for obtaining a new access token.",
                    "type": "string"
                }
            }
        },
        "entity.Login": {
            "type": "object",
            "properties": {
                "login": {
                    "description": "Login username or identifier.",
                    "type": "string"
                },
                "meta": {
                    "description": "Associated metadata.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Meta"
                    }
                },
                "name": {
                    "description": "Name of the login entry.",
                    "type": "string"
                },
                "password": {
                    "description": "Password for the login.",
                    "type": "string"
                },
                "uri": {
                    "description": "URI or website related to the login.",
                    "type": "string"
                }
            }
        },
        "entity.Meta": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name or type of the metadata.",
                    "type": "string"
                },
                "value": {
                    "description": "Value of the metadata.",
                    "type": "string"
                }
            }
        },
        "entity.SecretNote": {
            "type": "object",
            "properties": {
                "meta": {
                    "description": "Associated metadata for the note.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Meta"
                    }
                },
                "name": {
                    "description": "Name or title of the note.",
                    "type": "string"
                },
                "note": {
                    "description": "Content of the note.",
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email address of the user.",
                    "type": "string"
                },
                "uuid": {
                    "description": "Unique identifier for the user.",
                    "type": "string"
                }
            }
        },
        "v1.loginPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "v1.response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "message"
                },
                "status": {
                    "type": "string",
                    "example": "message"
                }
            }
        }
    }
}